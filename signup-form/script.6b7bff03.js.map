{"version":3,"sources":["script.js"],"names":["signupForm","document","querySelector","fields","querySelectorAll","map","field","input","feedback","checkEmpty","value","placeholder","trim","checkEmail","emailRegExp","test","inputChecks","firstName","lastName","email","password","showFeedback","error","textContent","classList","add","setAttribute","hideFeedback","remove","removeAttribute","validate","name","check","find","errorMsg","updateUi","hasErrors","Boolean","signup","e","preventDefault","invalidFields","filter","length","console","log","focus","addEventListener"],"mappings":"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","file":"script.6b7bff03.js","sourceRoot":"../src","sourcesContent":["const signupForm = document.querySelector('.signup-form');\nconst fields = [...signupForm.querySelectorAll('.field')].map((field) => ({\n  field,\n  input: field.querySelector('.input__element'),\n  feedback: field.querySelector('.field__feedback'),\n}));\n\nconst checkEmpty = ({ value, placeholder }) =>\n  value.trim() === '' ? `${placeholder} cannot be empty` : '';\n\nconst checkEmail = ({ value }) => {\n  const emailRegExp = /^\\w+([.-]\\w+)*@\\w+([.-]\\w+)*\\.\\w{2,}$/;\n  return emailRegExp.test(value.trim())\n    ? ''\n    : 'Looks like this is not an email';\n};\n\nconst inputChecks = {\n  firstName: [checkEmpty],\n  lastName: [checkEmpty],\n  email: [checkEmpty, checkEmail],\n  password: [checkEmpty],\n};\n\nconst showFeedback = ({ input, field, feedback, error }) => {\n  // eslint-disable-next-line no-param-reassign\n  feedback.textContent = error;\n  field.classList.add('field--error');\n  input.setAttribute('aria-invalid', true);\n};\n\nconst hideFeedback = ({ input, field, feedback }) => {\n  // eslint-disable-next-line no-param-reassign\n  feedback.textContent = '';\n  field.classList.remove('field--error');\n  input.removeAttribute('aria-invalid');\n};\n\nconst validate = (field) => {\n  const { input } = field;\n  const error =\n    inputChecks[input.name]\n      .map((check) => check(input))\n      .find((errorMsg) => errorMsg !== '') || null;\n  return { ...field, error };\n};\n\nconst updateUi = (field) => {\n  if (field.error) {\n    showFeedback(field);\n  } else {\n    hideFeedback(field);\n  }\n  return field;\n};\n\nconst hasErrors = ({ error }) => Boolean(error);\n\nconst signup = (e) => {\n  e.preventDefault();\n\n  const invalidFields = fields.map(validate).map(updateUi).filter(hasErrors);\n\n  if (invalidFields.length === 0) {\n    // eslint-disable-next-line no-console\n    console.log('Signup form validation passed.');\n    // send data to backend, handle response\n  } else invalidFields[0].input.focus();\n};\n\nsignupForm.addEventListener('submit', signup);\n"]}